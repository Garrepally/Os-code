
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h> 
#include <fcntl.h> 

int main (int a, char *b[]) {
 int p[2]; 
    int len;
    char buffer1[100];
    char buffer2[100];
    if (a!= 3) {
      perror("Filecopy: filecopy.exe [target] [destination]. \n");
      exit(1);
    }
    
    char* srcFile = b[1];
    char* dstFile = b[2];
    if (pipe(p) < 0) {
      printf("Something went wrong creating the pipe! %s\n", strerror(errno));
      exit(1);
    }
    switch(fork()) {
      case -1:
        printf("Error forking child process. %s\n", strerror(errno));
        exit(1);
      case 0: 
        close(pipeFds[1]);                                                        
        ssize_t num_bytes_child = read(pipeFds[0], buffer2, sizeof(buffer2));   
        close(pipeFds[0]);                                                        

        int targetDesc = open(dstFile, O_CREAT | O_WRONLY);                                  
        write(targetDesc, buffer2, num_bytes_child);   
      default: 
        close(p[0]);                                            
        int fileInDesc = open(srcFile, O_RDONLY);                     
        ssize_t num_bytes = read(fileInDesc, buffer, sizeof(buffer1));   
        write(p[1], buffer1, num_bytes);                        
        close(p[1]);                                            
    }
    return 0;
}
